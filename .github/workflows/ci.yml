name: Go CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ "**" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint (golangci-lint)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: false  # we'll cache manually to also include golangci cache

      - name: Cache Go modules & build cache
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            ~/.cache/golangci-lint
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}-lint
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest
          args: --timeout=5m

  # Kept here for reference
#  extra-analyzers:
#    name: Extra analyzers (optional)
#    runs-on: ubuntu-latest
#    needs: [ lint ]
#
#    steps:
#      - uses: actions/checkout@v4
#      - uses: actions/setup-go@v5
#        with:
#          go-version-file: go.mod
#          cache: true
#
#      - name: go vet
#        run: go vet ./...
#
#      - name: Install staticcheck
#        run: go install honnef.co/go/tools/cmd/staticcheck@latest
#
#      - name: staticcheck
#        run: staticcheck ./...

  test:
    name: Test (race + coverage)
    runs-on: ubuntu-latest
    needs: [lint]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true

      - name: Run tests
        run: |
          go test -race -covermode=atomic -coverprofile=coverage.out ./...

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage.out

  vulncheck:
    name: Vulnerability scan (govulncheck)
    runs-on: ubuntu-latest
    needs: [test]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true

      - name: Install govulncheck
        run: go install golang.org/x/vuln/cmd/govulncheck@latest

      - name: Run govulncheck
        run: govulncheck ./...
